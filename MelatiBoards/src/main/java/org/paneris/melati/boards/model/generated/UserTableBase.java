// Do not edit this file!  It was generated by Melati POEM's DSD preprocessor.

package org.paneris.melati.boards.model.generated;

import org.paneris.melati.boards.model.User;
import org.paneris.melati.boards.model.UserTable;
import org.paneris.melati.boards.model.*;
import java.util.*;
import java.sql.Date;
import java.sql.Timestamp;
import org.melati.poem.*;

public class UserTableBase extends org.melati.poem.UserTable {

  private Column col_email = null;

  public UserTableBase(
      Database database, String name,
      DefinitionSource definitionSource) throws PoemException {
    super(database, name, definitionSource);
  }

  public UserTableBase(
      Database database, String name) throws PoemException {
    this(database, name, DefinitionSource.dsd);
  }

  public BoardsDatabase getBoardsDatabase() {
    return (BoardsDatabase)getDatabase();  }

  protected void init() throws PoemException {
    super.init();
    defineColumn(col_email =
        new Column(this, "email", new StringPoemType(false, -1), DefinitionSource.dsd) { 
          public Object getCooked(Persistent g)
              throws AccessPoemException, PoemException {
            return ((User)g).getEmail();
          }

          public void setCooked(Persistent g, Object cooked)
              throws AccessPoemException, ValidationPoemException {
            ((User)g).setEmail((String)cooked);
          }

          public Field asField(Persistent g) {
            return ((User)g).getEmailField();
          }

          protected DisplayLevel defaultDisplayLevel() {
            return DisplayLevel.summary;
          }

          protected Searchability defaultSearchability() {
            return Searchability.yes;
          }

          protected int defaultDisplayOrder() {
            return 50;
          }

          protected String defaultDescription() {
            return "The user's email address";
          }

          protected int defaultWidth() {
            return 40;
          }

          public Object getRaw_unsafe(Persistent g)
              throws AccessPoemException {
            return ((User)g).getEmail_unsafe();
          }

          public void setRaw_unsafe(Persistent g, Object raw)
              throws AccessPoemException {
            ((User)g).setEmail_unsafe((String)raw);
          }

          public Object getRaw(Persistent g)
              throws AccessPoemException {
            return ((User)g).getEmail();
          }

          public void setRaw(Persistent g, Object raw)
              throws AccessPoemException {
            ((User)g).setEmail((String)raw);
          }
        });
  }

  public final Column getEmailColumn() {
    return col_email;
  }

  public org.melati.poem.User getUserObject(Integer troid) {
    return (org.melati.poem.User)getObject(troid);
  }

  public org.melati.poem.User getUserObject(int troid) {
    return (org.melati.poem.User)getObject(troid);
  }

  protected Persistent _newPersistent() {
    return new User();
  }
  protected String defaultDescription() {
    return "A board user (with an email address)";
  }

  protected String defaultCategory() {
    return "User";
  }

  protected int defaultDisplayOrder() {
    return 2010;
  }
}
